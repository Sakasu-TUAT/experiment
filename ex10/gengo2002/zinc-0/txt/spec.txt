「キーワード」
proc word defproc if while getchar putchar set call

「雑記号」
, := // ; : ( ) { } == != < > <= >= + - | ^ * / % << >> >>> & ~

「コメントについて」
「 // 」から行末 ( 改行記号 ) までは無視されます
( 文字列定数とかがないので、これについて例外は特にない )

「構文」
<モジュールソース> ::= <モジュール内宣言>* <手続き定義>*
<モジュール内宣言> ::= <手続き宣言> | <グローバル変数定義>
<手続き宣言> ::= proc <手続き名> [ , <手続き名> ]* ;
<手続き名> ::= <名前>
<グローバル変数定義> ::= word <グローバル変数名>  [ , <グローバル変数名> ]* ;
<グローバル変数名> ::= <変数名>
<変数名> ::= <名前>
<手続き定義> ::= defproc <手続き名> : <ローカル変数定義>* <複文>
<ローカル変数定義> ::= word <ローカル変数名>  [ , <ローカル変数名> ]* ;
<ローカル変数名> ::= <変数名>

// これより文
<文> ::= <if文> | <while文> | <代入文> | <手続き呼出文> | <putchar文>
<複文> ::= { <文>+ }
<if文> ::= if ( <式> ) <複文>
<while文> ::= while ( <式> ) <複文>
<代入文> ::= set <変数名> := [ getchar | <式> ] ;
<手続き呼出文> ::= call <手続き名> ;
<putchar文> ::= putchar <式> ;

// これより式

<式> ::= <加算> | <式> [ == | != | < | > | <= | >= ] <加算>
<加算> ::= <乗算> | <加算> [ + | - | | | ^ ] <乗算>
<乗算> ::= <単項> | <乗算> [ * | / | % | << | >> | >>> | & ] <単項>
<単項> ::= <整数プリミティブ> | [ ~ | + | - ] <単項>
<整数プリミティブ> ::= <定数> | <変数名> | ( <式> )

注 : 比較演算の仕様について
== は, 等しければ ~0 , 等しくなければ 0
!= は, 等しくなければ ~0 , 等しければ 0
(以下同様, 真を ~0, 偽を 0 で表現する)
